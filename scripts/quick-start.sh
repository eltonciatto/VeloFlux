#!/bin/bash

# üéØ QUICK START - Dashboard VeloFlux 100% Funcional
# Execute este script para validar TUDO de forma r√°pida

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

clear

echo -e "${CYAN}"
echo "  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
echo "  ‚îÇ                                                                 ‚îÇ"
echo "  ‚îÇ               üéØ QUICK START - VELOFLUX DASHBOARD               ‚îÇ"
echo "  ‚îÇ                    Valida√ß√£o 100% Funcional                    ‚îÇ"
echo "  ‚îÇ                                                                 ‚îÇ"
echo "  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
echo -e "${NC}"

echo -e "${BLUE}Este script vai validar se o dashboard VeloFlux est√° 100% funcional${NC}"
echo -e "${BLUE}Dura√ß√£o estimada: 5-10 minutos${NC}"
echo ""

# Ask for confirmation
read -p "Deseja continuar? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Cancelado pelo usu√°rio."
    exit 0
fi

# Check if we're in the right directory
if [ ! -d "frontend" ] || [ ! -d "backend" ]; then
    echo -e "${RED}‚ùå Erro: Execute este script a partir do diret√≥rio raiz do projeto VeloFlux${NC}"
    echo -e "${YELLOW}Exemplo: cd /workspaces/VeloFlux && ./scripts/quick-start.sh${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Diret√≥rio correto encontrado${NC}"

# Step 1: Check prerequisites
echo ""
echo -e "${YELLOW}üìã Verificando pr√©-requisitos...${NC}"

# Check Node.js
if command -v node > /dev/null 2>&1; then
    node_version=$(node --version)
    echo -e "${GREEN}‚úÖ Node.js: $node_version${NC}"
else
    echo -e "${RED}‚ùå Node.js n√£o encontrado${NC}"
    exit 1
fi

# Check Go
if command -v go > /dev/null 2>&1; then
    go_version=$(go version | cut -d' ' -f3)
    echo -e "${GREEN}‚úÖ Go: $go_version${NC}"
else
    echo -e "${RED}‚ùå Go n√£o encontrado${NC}"
    exit 1
fi

# Check npm
if command -v npm > /dev/null 2>&1; then
    npm_version=$(npm --version)
    echo -e "${GREEN}‚úÖ npm: v$npm_version${NC}"
else
    echo -e "${RED}‚ùå npm n√£o encontrado${NC}"
    exit 1
fi

# Step 2: Install dependencies
echo ""
echo -e "${YELLOW}üì¶ Instalando depend√™ncias...${NC}"

echo -e "${BLUE}Frontend...${NC}"
cd frontend
if [ ! -d "node_modules" ]; then
    npm install --silent
    echo -e "${GREEN}‚úÖ Depend√™ncias do frontend instaladas${NC}"
else
    echo -e "${GREEN}‚úÖ Depend√™ncias do frontend j√° instaladas${NC}"
fi
cd ..

echo -e "${BLUE}Backend...${NC}"
cd backend
go mod download > /dev/null 2>&1
echo -e "${GREEN}‚úÖ Depend√™ncias do backend instaladas${NC}"
cd ..

# Step 3: Check if services are running
echo ""
echo -e "${YELLOW}üîç Verificando servi√ßos...${NC}"

frontend_running=false
backend_running=false

if curl -s http://localhost:3000 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Frontend rodando em http://localhost:3000${NC}"
    frontend_running=true
else
    echo -e "${YELLOW}‚ö†Ô∏è Frontend n√£o est√° rodando${NC}"
fi

if curl -s http://localhost:8080/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Backend rodando em http://localhost:8080${NC}"
    backend_running=true
else
    echo -e "${YELLOW}‚ö†Ô∏è Backend n√£o est√° rodando${NC}"
fi

# Prompt to start services if needed
if [ "$frontend_running" = false ] || [ "$backend_running" = false ]; then
    echo ""
    echo -e "${YELLOW}üöÄ Alguns servi√ßos n√£o est√£o rodando. Voc√™ precisa inici√°-los:${NC}"
    echo ""
    
    if [ "$backend_running" = false ]; then
        echo -e "${BLUE}Terminal 1 - Backend:${NC}"
        echo "cd backend && go run cmd/main.go"
        echo ""
    fi
    
    if [ "$frontend_running" = false ]; then
        echo -e "${BLUE}Terminal 2 - Frontend:${NC}"
        echo "cd frontend && npm run dev"
        echo ""
    fi
    
    echo -e "${YELLOW}Ap√≥s iniciar os servi√ßos, pressione Enter para continuar...${NC}"
    read -r
    
    # Check again
    echo -e "${BLUE}Verificando novamente...${NC}"
    
    if ! curl -s http://localhost:3000 > /dev/null 2>&1; then
        echo -e "${RED}‚ùå Frontend ainda n√£o est√° respondendo${NC}"
        exit 1
    fi
    
    if ! curl -s http://localhost:8080/health > /dev/null 2>&1; then
        echo -e "${RED}‚ùå Backend ainda n√£o est√° respondendo${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ Ambos os servi√ßos est√£o rodando agora!${NC}"
fi

# Step 4: Run master validation
echo ""
echo -e "${YELLOW}üéØ Executando valida√ß√£o completa...${NC}"
echo ""

if [ -f "scripts/master-validation.sh" ]; then
    # Make sure it's executable
    chmod +x scripts/master-validation.sh
    
    # Run the master validation
    ./scripts/master-validation.sh
    
    validation_result=$?
    
    echo ""
    echo -e "${PURPLE}‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì${NC}"
    echo -e "${PURPLE}‚ñì‚ñì                    RESULTADO FINAL                    ‚ñì‚ñì${NC}"
    echo -e "${PURPLE}‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì${NC}"
    echo ""
    
    if [ $validation_result -eq 0 ]; then
        echo -e "${GREEN}üéâ SUCESSO TOTAL! üéâ${NC}"
        echo -e "${GREEN}Dashboard VeloFlux est√° 100% funcional!${NC}"
        echo ""
        echo -e "${GREEN}‚úÖ Todos os testes passaram${NC}"
        echo -e "${GREEN}‚úÖ Zero bugs cr√≠ticos${NC}"
        echo -e "${GREEN}‚úÖ APIs funcionando corretamente${NC}"
        echo -e "${GREEN}‚úÖ Interface responsiva${NC}"
        echo -e "${GREEN}‚úÖ Pronto para produ√ß√£o${NC}"
        echo ""
        echo -e "${BLUE}üöÄ Pr√≥ximos passos:${NC}"
        echo -e "${BLUE}   ‚Ä¢ Acesse http://localhost:3000${NC}"
        echo -e "${BLUE}   ‚Ä¢ Fa√ßa login e teste todas as funcionalidades${NC}"
        echo -e "${BLUE}   ‚Ä¢ Configure deploy para produ√ß√£o${NC}"
        echo -e "${BLUE}   ‚Ä¢ Documente procedimentos operacionais${NC}"
        
    elif [ $validation_result -eq 1 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è SUCESSO PARCIAL ‚ö†Ô∏è${NC}"
        echo -e "${YELLOW}Dashboard funcional com alguns pontos de aten√ß√£o${NC}"
        echo ""
        echo -e "${BLUE}üîß Recomenda√ß√µes:${NC}"
        echo -e "${BLUE}   ‚Ä¢ Revisar relat√≥rio em reports/master-test-report-*.md${NC}"
        echo -e "${BLUE}   ‚Ä¢ Corrigir pontos menores identificados${NC}"
        echo -e "${BLUE}   ‚Ä¢ Re-executar valida√ß√£o ap√≥s corre√ß√µes${NC}"
        
    else
        echo -e "${RED}‚ùå REQUER ATEN√á√ÉO ‚ùå${NC}"
        echo -e "${RED}Algumas falhas cr√≠ticas foram detectadas${NC}"
        echo ""
        echo -e "${BLUE}üõ†Ô∏è A√ß√µes necess√°rias:${NC}"
        echo -e "${BLUE}   ‚Ä¢ Revisar logs de erro em reports/${NC}"
        echo -e "${BLUE}   ‚Ä¢ Corrigir falhas identificadas${NC}"
        echo -e "${BLUE}   ‚Ä¢ Verificar configura√ß√£o do ambiente${NC}"
        echo -e "${BLUE}   ‚Ä¢ Re-executar este script ap√≥s corre√ß√µes${NC}"
    fi
    
else
    echo -e "${RED}‚ùå Script de valida√ß√£o n√£o encontrado${NC}"
    echo -e "${YELLOW}Executando valida√ß√µes b√°sicas...${NC}"
    
    # Basic validation
    echo -e "${BLUE}Testando endpoints b√°sicos...${NC}"
    
    if curl -s http://localhost:8080/health | grep -q "ok\|healthy\|success"; then
        echo -e "${GREEN}‚úÖ Health check: OK${NC}"
    else
        echo -e "${RED}‚ùå Health check: FALHOU${NC}"
    fi
    
    if curl -s http://localhost:3000 | grep -q "html\|VeloFlux\|React"; then
        echo -e "${GREEN}‚úÖ Frontend: OK${NC}"
    else
        echo -e "${RED}‚ùå Frontend: FALHOU${NC}"
    fi
fi

# Final instructions
echo ""
echo -e "${CYAN}‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì${NC}"
echo -e "${CYAN}‚ñì‚ñì                      LINKS √öTEIS                       ‚ñì‚ñì${NC}"
echo -e "${CYAN}‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì${NC}"
echo ""
echo -e "${BLUE}üåê Dashboard:${NC} http://localhost:3000"
echo -e "${BLUE}üîß API Backend:${NC} http://localhost:8080"
echo -e "${BLUE}üìä Health Check:${NC} http://localhost:8080/health"
echo -e "${BLUE}üìã M√©tricas:${NC} http://localhost:8080/api/metrics/system"
echo ""
echo -e "${BLUE}üìÅ Relat√≥rios:${NC} reports/master-test-report-*.md"
echo -e "${BLUE}üìö Documenta√ß√£o:${NC} docs/GUIA_TESTE_DASHBOARD_PRODUCAO.md"
echo -e "${BLUE}üéØ Plano Completo:${NC} docs/PLANO_TESTE_DASHBOARD_PRODUCAO_COMPLETO.md"
echo ""

# Final message
echo -e "${GREEN}üéØ Quick Start conclu√≠do!${NC}"
echo -e "${BLUE}Use os links acima para acessar e testar o dashboard.${NC}"
echo ""

exit $validation_result
