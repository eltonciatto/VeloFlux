# VeloFlux Main Load Balancer Configuration
upstream frontend {
    server frontend:80;
}

upstream backend_api {
    server backend:9090;
}

upstream backend_metrics {
    server backend:8080;
}

# Main server block
server {
    listen 80;
    server_name localhost;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Health check endpoint (direct to backend /health)
    location = /health {
        proxy_pass http://backend_api/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off;
    }

    # API health check (map to backend /health)
    location = /api/health {
        proxy_pass http://backend_api/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off;
    }

    # Auth endpoints (backend) - manter prefixo /auth
    location /auth/ {
        proxy_pass http://backend_api/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Remove trailing slashes
        rewrite ^(.+)/$  $1 permanent;
    }

    # API Health and Metrics specific routes
    location = /api/metrics {
        proxy_pass http://backend_metrics/metrics;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Backends endpoint - return mock backend data
    location = /api/backends {
        return 200 '[
            {
                "id": "backend-1",
                "address": "backend:9090",
                "pool": "main-pool",
                "status": "healthy",
                "health": "up",
                "weight": 100,
                "connections": 25,
                "response_time": 45.5,
                "error_rate": 0.1,
                "last_check": "2025-06-20T03:25:00Z",
                "region": "us-east-1",
                "version": "1.0.0"
            },
            {
                "id": "backend-2", 
                "address": "backend:8080",
                "pool": "metrics-pool",
                "status": "healthy",
                "health": "up",
                "weight": 50,
                "connections": 12,
                "response_time": 32.1,
                "error_rate": 0.0,
                "last_check": "2025-06-20T03:25:00Z",
                "region": "us-west-2", 
                "version": "1.0.0"
            },
            {
                "id": "backend-3",
                "address": "nginx:80",
                "pool": "frontend-pool",
                "status": "healthy",
                "health": "up", 
                "weight": 75,
                "connections": 18,
                "response_time": 28.3,
                "error_rate": 0.05,
                "last_check": "2025-06-20T03:25:00Z",
                "region": "eu-west-1",
                "version": "1.0.0"
            }
        ]';
        add_header Content-Type application/json;
    }

    # Pools endpoint - return mock pool data
    location = /api/pools {
        return 200 '[
            {
                "name": "main-pool",
                "backends": ["backend:9090"],
                "algorithm": "round_robin",
                "health_check": {"enabled": true, "interval": "30s"},
                "status": "healthy",
                "active_backends": 1,
                "total_backends": 1,
                "requests": 52341,
                "errors": 52
            },
            {
                "name": "metrics-pool", 
                "backends": ["backend:8080"],
                "algorithm": "least_conn",
                "health_check": {"enabled": true, "interval": "10s"},
                "status": "healthy",
                "active_backends": 1,
                "total_backends": 1,
                "requests": 41234,
                "errors": 41
            },
            {
                "name": "frontend-pool",
                "backends": ["nginx:80"],
                "algorithm": "ip_hash",
                "health_check": {"enabled": true, "interval": "15s"},
                "status": "healthy",
                "active_backends": 1,
                "total_backends": 1,
                "requests": 31845,
                "errors": 32
            }
        ]';
        add_header Content-Type application/json;
    }

    # Cluster endpoint - return mock cluster data
    location = /api/cluster {
        return 200 '{
            "status": "healthy",
            "nodes": 2,
            "version": "v1.0.0",
            "regions": ["us-east-1", "us-west-2", "eu-west-1"],
            "uptime": "24h 15m",
            "leader": "node-1"
        }';
        add_header Content-Type application/json;
    }

    # WebSocket endpoint for backends monitoring
    location /api/ws/ {
        proxy_pass http://backend_api/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # System endpoints - redirect to appropriate backend endpoints
    location /api/system/logs {
        # Return mock logs as array
        return 200 '[
            {
                "id": 1,
                "timestamp": "2025-06-20T03:30:00Z",
                "level": "info",
                "message": "Backend health check passed",
                "component": "health-checker",
                "source": "system",
                "metadata": {}
            },
            {
                "id": 2,
                "timestamp": "2025-06-20T03:29:45Z", 
                "level": "debug",
                "message": "Processing request from 127.0.0.1",
                "component": "load-balancer",
                "source": "system",
                "metadata": {}
            },
            {
                "id": 3,
                "timestamp": "2025-06-20T03:29:30Z",
                "level": "info", 
                "message": "Load balancer started successfully",
                "component": "load-balancer",
                "source": "system",
                "metadata": {}
            },
            {
                "id": 4,
                "timestamp": "2025-06-20T03:29:15Z",
                "level": "info",
                "message": "Backend pool initialized",
                "component": "backend-pool",
                "source": "system", 
                "metadata": {}
            }
        ]';
        add_header Content-Type application/json;
    }

    location /api/system/performance {
        # Return more detailed performance data
        return 200 '{
            "cpu": {
                "usage": 25.5,
                "cores": 4,
                "load_avg": [1.2, 1.1, 1.0]
            },
            "memory": {
                "usage": 65.2,
                "total": 8192,
                "available": 2845,
                "buffers": 156
            },
            "disk": {
                "usage": 45.1,
                "total": 100,
                "available": 54.9,
                "io_read": 1245,
                "io_write": 3421
            },
            "network": {
                "bytes_in": 1234567,
                "bytes_out": 9876543,
                "packets_in": 12345,
                "packets_out": 98765
            }
        }';
        add_header Content-Type application/json;
    }

    location /api/system/alerts {
        # Return mock alerts as array
        return 200 '[
            {
                "id": 1,
                "type": "warning",
                "title": "High CPU Usage",
                "message": "CPU usage is above 80%",
                "timestamp": "2025-06-20T03:25:00Z",
                "resolved": false,
                "severity": "medium",
                "source": "system"
            },
            {
                "id": 2,
                "type": "info", 
                "title": "Backend Added",
                "message": "New backend server added to pool",
                "timestamp": "2025-06-20T03:20:00Z",
                "resolved": true,
                "severity": "low",
                "source": "system"
            },
            {
                "id": 3,
                "type": "error",
                "title": "Connection Timeout",
                "message": "Backend connection timeout detected",
                "timestamp": "2025-06-20T03:18:00Z", 
                "resolved": false,
                "severity": "high",
                "source": "system"
            }
        ]';
        add_header Content-Type application/json;
    }

    location /api/metrics/realtime {
        # Return comprehensive realtime metrics
        return 200 '{
            "timestamp": "2025-06-20T04:00:00Z",
            "requests_per_second": 45.2,
            "response_time_avg": 125.5,
            "error_rate": 0.1,
            "total_requests": 125420,
            "total_errors": 125,
            "active_connections": 234,
            "bandwidth": {
                "in": 1234567,
                "out": 9876543
            },
            "backend_stats": [
                {
                    "id": "backend-1",
                    "name": "API Server",
                    "requests": 52341,
                    "response_time": 45.5,
                    "errors": 52,
                    "status": "healthy",
                    "cpu_usage": 25.3,
                    "memory_usage": 65.2,
                    "connections": 25
                },
                {
                    "id": "backend-2", 
                    "name": "Metrics Server",
                    "requests": 41234,
                    "response_time": 32.1,
                    "errors": 41,
                    "status": "healthy",
                    "cpu_usage": 18.7,
                    "memory_usage": 45.8,
                    "connections": 12
                },
                {
                    "id": "backend-3",
                    "name": "Frontend Server",
                    "requests": 31845,
                    "response_time": 28.3,
                    "errors": 32,
                    "status": "healthy",
                    "cpu_usage": 12.1,
                    "memory_usage": 38.4,
                    "connections": 18
                }
            ],
            "recent_metrics": [
                {"timestamp": "2025-06-20T03:55:00Z", "rps": 42.1, "rt": 128.3},
                {"timestamp": "2025-06-20T03:56:00Z", "rps": 44.5, "rt": 124.7},
                {"timestamp": "2025-06-20T03:57:00Z", "rps": 43.8, "rt": 126.2},
                {"timestamp": "2025-06-20T03:58:00Z", "rps": 45.9, "rt": 123.1},
                {"timestamp": "2025-06-20T03:59:00Z", "rps": 46.2, "rt": 122.8},
                {"timestamp": "2025-06-20T04:00:00Z", "rps": 45.2, "rt": 125.5}
            ]
        }';
        add_header Content-Type application/json;
    }

    # AI Endpoints
    location /api/ai/metrics {
        return 200 '{
            "accuracy": 0.95,
            "confidence": 0.87,
            "total_predictions": 15678,
            "correct_predictions": 14893,
            "model_version": "v2.1.0",
            "last_retrained": "2025-06-19T14:30:00Z",
            "current_algorithm": "adaptive_weighted_round_robin",
            "requests_processed": 125420,
            "average_response_time": 125.5,
            "error_rate": 0.05,
            "recent_requests": [
                {"timestamp": "2025-06-20T03:29:00Z", "confidence": 0.92, "algorithm": "round_robin"},
                {"timestamp": "2025-06-20T03:28:30Z", "confidence": 0.89, "algorithm": "least_conn"},
                {"timestamp": "2025-06-20T03:28:00Z", "confidence": 0.94, "algorithm": "weighted_round_robin"}
            ]
        }';
        add_header Content-Type application/json;
    }

    location /api/ai/health {
        return 200 '{
            "status": "healthy",
            "model_status": "active",
            "prediction_latency": 12.5,
            "last_health_check": "2025-06-20T03:30:00Z",
            "uptime": "72h 15m",
            "memory_usage": "2.3GB",
            "cpu_usage": "15.2%"
        }';
        add_header Content-Type application/json;
    }

    location /api/ai/metrics/geo {
        return 200 '{
            "regions": [
                {"region": "us-east-1", "requests": 45231, "latency": 125.5, "accuracy": 0.94},
                {"region": "us-west-2", "requests": 38912, "latency": 98.3, "accuracy": 0.96},
                {"region": "eu-west-1", "requests": 41523, "latency": 156.7, "accuracy": 0.93}
            ],
            "global_accuracy": 0.95,
            "total_requests": 125666
        }';
        add_header Content-Type application/json;
    }

    location /ai/predictions {
        return 200 '{
            "scaling_recommendation": "scale_up",
            "recommended_algorithm": "weighted_round_robin",
            "confidence": 0.89,
            "expected_load_factor": 1.25,
            "predictions": [
                {"time": "2025-06-20T03:35:00Z", "predicted_load": 135.2, "confidence": 0.92},
                {"time": "2025-06-20T03:40:00Z", "predicted_load": 142.8, "confidence": 0.88},
                {"time": "2025-06-20T03:45:00Z", "predicted_load": 156.3, "confidence": 0.85}
            ]
        }';
        add_header Content-Type application/json;
    }

    location /ai/models {
        return 200 '{
            "active_models": [
                {"name": "load_predictor", "version": "v2.1.0", "status": "active", "accuracy": 0.95},
                {"name": "traffic_analyzer", "version": "v1.8.2", "status": "active", "accuracy": 0.91}
            ],
            "total_models": 2,
            "last_updated": "2025-06-19T14:30:00Z"
        }';
        add_header Content-Type application/json;
    }

    location /ai/config {
        return 200 '{
            "enabled": true,
            "learning_rate": 0.001,
            "retrain_interval": "24h",
            "min_confidence_threshold": 0.7,
            "algorithm_weights": {
                "round_robin": 0.3,
                "least_conn": 0.4,
                "weighted_round_robin": 0.3
            }
        }';
        add_header Content-Type application/json;
    }

    location /ai/history {
        return 200 '{
            "accuracy_history": [
                {"timestamp": "2025-06-20T03:00:00Z", "accuracy": 0.94},
                {"timestamp": "2025-06-20T03:05:00Z", "accuracy": 0.95},
                {"timestamp": "2025-06-20T03:10:00Z", "accuracy": 0.93},
                {"timestamp": "2025-06-20T03:15:00Z", "accuracy": 0.96},
                {"timestamp": "2025-06-20T03:20:00Z", "accuracy": 0.94},
                {"timestamp": "2025-06-20T03:25:00Z", "accuracy": 0.95},
                {"timestamp": "2025-06-20T03:30:00Z", "accuracy": 0.97}
            ],
            "confidence_history": [
                {"timestamp": "2025-06-20T03:00:00Z", "confidence": 0.89},
                {"timestamp": "2025-06-20T03:05:00Z", "confidence": 0.91},
                {"timestamp": "2025-06-20T03:10:00Z", "confidence": 0.88},
                {"timestamp": "2025-06-20T03:15:00Z", "confidence": 0.93},
                {"timestamp": "2025-06-20T03:20:00Z", "confidence": 0.87},
                {"timestamp": "2025-06-20T03:25:00Z", "confidence": 0.90},
                {"timestamp": "2025-06-20T03:30:00Z", "confidence": 0.94}
            ],
            "algorithm_usage": [
                {"timestamp": "2025-06-20T03:00:00Z", "algorithm": "round_robin", "count": 1234},
                {"timestamp": "2025-06-20T03:05:00Z", "algorithm": "least_conn", "count": 987},
                {"timestamp": "2025-06-20T03:10:00Z", "algorithm": "weighted_round_robin", "count": 1456}
            ]
        }';
        add_header Content-Type application/json;
    }

    location /ai/retrain {
        return 200 '{
            "status": "success",
            "message": "Model retraining initiated",
            "job_id": "retrain_20250620_033000",
            "estimated_completion": "2025-06-20T04:00:00Z"
        }';
        add_header Content-Type application/json;
    }

    # Advanced Metrics Endpoints
    location /api/metrics/trends {
        return 200 '{
            "requests": [
                {"timestamp": "2025-06-20T02:30:00Z", "value": 1250},
                {"timestamp": "2025-06-20T02:35:00Z", "value": 1340},
                {"timestamp": "2025-06-20T02:40:00Z", "value": 1180},
                {"timestamp": "2025-06-20T02:45:00Z", "value": 1450},
                {"timestamp": "2025-06-20T02:50:00Z", "value": 1620},
                {"timestamp": "2025-06-20T02:55:00Z", "value": 1380},
                {"timestamp": "2025-06-20T03:00:00Z", "value": 1720}
            ],
            "errors": [
                {"timestamp": "2025-06-20T02:30:00Z", "value": 2},
                {"timestamp": "2025-06-20T02:35:00Z", "value": 1},
                {"timestamp": "2025-06-20T02:40:00Z", "value": 4},
                {"timestamp": "2025-06-20T02:45:00Z", "value": 0},
                {"timestamp": "2025-06-20T02:50:00Z", "value": 3},
                {"timestamp": "2025-06-20T02:55:00Z", "value": 1},
                {"timestamp": "2025-06-20T03:00:00Z", "value": 2}
            ],
            "response_times": [
                {"timestamp": "2025-06-20T02:30:00Z", "value": 45.2},
                {"timestamp": "2025-06-20T02:35:00Z", "value": 38.1},
                {"timestamp": "2025-06-20T02:40:00Z", "value": 52.3},
                {"timestamp": "2025-06-20T02:45:00Z", "value": 41.8},
                {"timestamp": "2025-06-20T02:50:00Z", "value": 47.5},
                {"timestamp": "2025-06-20T02:55:00Z", "value": 35.9},
                {"timestamp": "2025-06-20T03:00:00Z", "value": 44.2}
            ],
            "bandwidth": [
                {"timestamp": "2025-06-20T02:30:00Z", "value": 1234567},
                {"timestamp": "2025-06-20T02:35:00Z", "value": 1456789},
                {"timestamp": "2025-06-20T02:40:00Z", "value": 1123456},
                {"timestamp": "2025-06-20T02:45:00Z", "value": 1678901},
                {"timestamp": "2025-06-20T02:50:00Z", "value": 1789012},
                {"timestamp": "2025-06-20T02:55:00Z", "value": 1345678},
                {"timestamp": "2025-06-20T03:00:00Z", "value": 1890123}
            ]
        }';
        add_header Content-Type application/json;
    }

    location /api/metrics/predictions {
        return 200 '{
            "next_hour_requests": 1850,
            "peak_time_estimate": "2025-06-20T04:15:00Z",
            "capacity_utilization": 0.68,
            "anomaly_score": 0.15,
            "predictions": [
                {"timestamp": "2025-06-20T04:00:00Z", "requests": 1650, "confidence": 0.92},
                {"timestamp": "2025-06-20T04:15:00Z", "requests": 1850, "confidence": 0.89},
                {"timestamp": "2025-06-20T04:30:00Z", "requests": 1720, "confidence": 0.87},
                {"timestamp": "2025-06-20T04:45:00Z", "requests": 1590, "confidence": 0.85}
            ],
            "confidence_levels": [0.92, 0.89, 0.87, 0.85],
            "forecast_window": "1h"
        }';
        add_header Content-Type application/json;
    }

    # Chart Data Endpoints
    location /api/charts/donut {
        return 200 '{
            "data": [
                {"name": "Healthy", "value": 85, "color": "#22c55e"},
                {"name": "Warning", "value": 12, "color": "#f59e0b"},
                {"name": "Error", "value": 3, "color": "#ef4444"}
            ],
            "total": 100,
            "center_text": "85% Healthy"
        }';
        add_header Content-Type application/json;
    }

    location /api/charts/pie {
        return 200 '{
            "data": [
                {"name": "API Requests", "value": 45, "color": "#3b82f6"},
                {"name": "Static Files", "value": 30, "color": "#8b5cf6"},
                {"name": "WebSocket", "value": 15, "color": "#06b6d4"},
                {"name": "Other", "value": 10, "color": "#84cc16"}
            ],
            "total": 100
        }';
        add_header Content-Type application/json;
    }

    location /api/charts/metrics {
        return 200 '{
            "circles": [
                {"id": "cpu", "value": 65, "max": 100, "label": "CPU", "color": "#3b82f6"},
                {"id": "memory", "value": 72, "max": 100, "label": "Memory", "color": "#8b5cf6"},
                {"id": "disk", "value": 45, "max": 100, "label": "Disk", "color": "#06b6d4"},
                {"id": "network", "value": 38, "max": 100, "label": "Network", "color": "#84cc16"}
            ],
            "gauges": [
                {"id": "requests", "value": 1250, "max": 2000, "label": "Requests/sec"},
                {"id": "response_time", "value": 125, "max": 500, "label": "Response Time (ms)"},
                {"id": "error_rate", "value": 0.1, "max": 5, "label": "Error Rate (%)"}
            ]
        }';
        add_header Content-Type application/json;
    }

    # Dashboard Stats Endpoint
    location /api/dashboard/stats {
        return 200 '{
            "overview": {
                "total_requests": 125420,
                "total_errors": 125,
                "active_backends": 3,
                "avg_response_time": 125.5,
                "requests_per_second": 45.2,
                "error_rate": 0.1,
                "uptime": "99.9%"
            },
            "backends": [
                {
                    "id": "backend-1",
                    "name": "API Server", 
                    "status": "healthy",
                    "response_time": 45.5,
                    "requests": 52341,
                    "errors": 52,
                    "error_rate": 0.1,
                    "connections": 25,
                    "cpu": 25.3,
                    "memory": 65.2,
                    "region": "us-east-1"
                },
                {
                    "id": "backend-2",
                    "name": "Metrics Server",
                    "status": "healthy", 
                    "response_time": 32.1,
                    "requests": 41234,
                    "errors": 41,
                    "error_rate": 0.1,
                    "connections": 12,
                    "cpu": 18.7,
                    "memory": 45.8,
                    "region": "us-west-2"
                },
                {
                    "id": "backend-3",
                    "name": "Frontend Server",
                    "status": "healthy",
                    "response_time": 28.3,
                    "requests": 31845,
                    "errors": 32,
                    "error_rate": 0.1,
                    "connections": 18,
                    "cpu": 12.1,
                    "memory": 38.4,
                    "region": "eu-west-1"
                }
            ],
            "chart_data": {
                "requests_timeline": [
                    {"time": "2025-06-20T03:55:00Z", "value": 1620},
                    {"time": "2025-06-20T03:56:00Z", "value": 1680},
                    {"time": "2025-06-20T03:57:00Z", "value": 1590},
                    {"time": "2025-06-20T03:58:00Z", "value": 1750},
                    {"time": "2025-06-20T03:59:00Z", "value": 1820},
                    {"time": "2025-06-20T04:00:00Z", "value": 1720}
                ],
                "response_times": [
                    {"time": "2025-06-20T03:55:00Z", "value": 128.3},
                    {"time": "2025-06-20T03:56:00Z", "value": 124.7},
                    {"time": "2025-06-20T03:57:00Z", "value": 126.2},
                    {"time": "2025-06-20T03:58:00Z", "value": 123.1},
                    {"time": "2025-06-20T03:59:00Z", "value": 122.8},
                    {"time": "2025-06-20T04:00:00Z", "value": 125.5}
                ],
                "error_rates": [
                    {"time": "2025-06-20T03:55:00Z", "value": 0.12},
                    {"time": "2025-06-20T03:56:00Z", "value": 0.08},
                    {"time": "2025-06-20T03:57:00Z", "value": 0.11},
                    {"time": "2025-06-20T03:58:00Z", "value": 0.09},
                    {"time": "2025-06-20T03:59:00Z", "value": 0.10},
                    {"time": "2025-06-20T04:00:00Z", "value": 0.10}
                ]
            }
        }';
        add_header Content-Type application/json;
    }

    # Circle/Graph data endpoint - ensure no undefined values
    location /api/charts/circles {
        return 200 '[
            {"id": "cpu", "r": 15, "cx": 50, "cy": 50, "value": 65, "max": 100, "label": "CPU", "color": "#3b82f6"},
            {"id": "memory", "r": 18, "cx": 150, "cy": 50, "value": 72, "max": 100, "label": "Memory", "color": "#8b5cf6"},
            {"id": "disk", "r": 12, "cx": 250, "cy": 50, "value": 45, "max": 100, "label": "Disk", "color": "#06b6d4"},
            {"id": "network", "r": 14, "cx": 350, "cy": 50, "value": 38, "max": 100, "label": "Network", "color": "#84cc16"}
        ]';
        add_header Content-Type application/json;
    }

    # Ensure backend stats have all required fields
    location /api/backend/stats {
        return 200 '{
            "backends": [
                {
                    "id": "backend-1",
                    "name": "API Server",
                    "status": "healthy",
                    "health": "up",
                    "address": "backend:9090",
                    "pool": "main-pool",
                    "weight": 100,
                    "connections": 25,
                    "requests": 52341,
                    "response_time": 45.5,
                    "error_rate": 0.1,
                    "errors": 52,
                    "cpu_usage": 25.3,
                    "memory_usage": 65.2,
                    "last_check": "2025-06-20T04:17:00Z",
                    "region": "us-east-1",
                    "version": "1.0.0"
                },
                {
                    "id": "backend-2",
                    "name": "Metrics Server",
                    "status": "healthy",
                    "health": "up", 
                    "address": "backend:8080",
                    "pool": "metrics-pool",
                    "weight": 50,
                    "connections": 12,
                    "requests": 41234,
                    "response_time": 32.1,
                    "error_rate": 0.1,
                    "errors": 41,
                    "cpu_usage": 18.7,
                    "memory_usage": 45.8,
                    "last_check": "2025-06-20T04:17:00Z",
                    "region": "us-west-2",
                    "version": "1.0.0"
                },
                {
                    "id": "backend-3",
                    "name": "Frontend Server",
                    "status": "healthy",
                    "health": "up",
                    "address": "nginx:80",
                    "pool": "frontend-pool", 
                    "weight": 75,
                    "connections": 18,
                    "requests": 31845,
                    "response_time": 28.3,
                    "error_rate": 0.1,
                    "errors": 32,
                    "cpu_usage": 12.1,
                    "memory_usage": 38.4,
                    "last_check": "2025-06-20T04:17:00Z",
                    "region": "eu-west-1",
                    "version": "1.0.0"
                }
            ],
            "total": 3,
            "healthy": 3,
            "unhealthy": 0
        }';
        add_header Content-Type application/json;
    }

    location /api/metrics/correlations {
        return 200 '[
            {
                "metric_a": "requests_per_second",
                "metric_b": "error_rate",
                "correlation": -0.45,
                "confidence": 0.89
            },
            {
                "metric_a": "response_time",
                "metric_b": "active_connections",
                "correlation": 0.72,
                "confidence": 0.94
            },
            {
                "metric_a": "bandwidth",
                "metric_b": "requests_per_second",
                "correlation": 0.85,
                "confidence": 0.96
            }
        ]';
        add_header Content-Type application/json;
    }

    # API Auth endpoints (backend) - handles /api/auth/* requests
    location /api/auth/ {
        proxy_pass http://backend_api/api/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # API routes (backend) - passar para backend mantendo /api
    location /api/ {
        # Remove trailing slashes for consistent routing
        rewrite ^(.+)/$  $1 permanent;
        
        proxy_pass http://backend_api/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Metrics endpoint (backend)
    location /metrics {
        proxy_pass http://backend_metrics/metrics;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Admin API (backend)
    location /admin/api/ {
        proxy_pass http://backend_api/admin;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Frontend routes (everything else)
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable cache for development
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # Handle SPA routing
        proxy_intercept_errors on;
        error_page 404 = @fallback;
    }

    # Fallback for SPA routing
    location @fallback {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static assets caching - cache bust for development
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header X-Cache-Bust "20250620-033500";
    }
}
