# VeloFlux LB Configuração Profissional
# Otimizada para multi-tenant e segurança

global:
  bind_address: "0.0.0.0:80"
  tls_bind_address: "0.0.0.0:443"
  metrics_address: "0.0.0.0:8080"
  
  # TLS Configuration - LetsEncrypt Auto-cert
  tls:
    auto_cert: true
    acme_email: "admin@veloflux.io"
    cert_dir: "/etc/ssl/certs/veloflux"
    domains:
      - "public.dev.veloflux.io"
      - "tenant1.public.dev.veloflux.io"
      - "tenant2.public.dev.veloflux.io"
      - "api.public.dev.veloflux.io"
      - "admin.public.dev.veloflux.io"
      - "*.public.dev.veloflux.io"

  # Health Check Defaults
  health_check:
    interval: "30s"
    timeout: "5s"
    retries: 3

  # Rate Limiting - Proteção contra DDoS
  rate_limit:
    requests_per_second: 100
    burst_size: 200
    cleanup_interval: "5m"

  # Web Application Firewall
  waf:
    enabled: true
    ruleset_path: "/etc/veloflux/waf/crs-rules.conf"
    level: "standard"
    log_violations: true

  # GeoIP Configuration
  geoip:
    enabled: false
    database_path: "/etc/veloflux/geoip/GeoLite2-City.mmdb"

# Authentication Configuration
auth:
  enabled: true
  jwt_secret: "veloflux-secure-token-change-in-production"
  jwt_issuer: "veloflux-lb"
  jwt_audience: "veloflux-admin"
  token_validity: "12h"
  oidc_enabled: false

# Clustering Configuration
cluster:
  enabled: true
  redis_address: "redis:6379"
  redis_password: ""
  redis_db: 0
  node_id: ""  # Auto-generated if empty
  heartbeat_interval: "5s"
  leader_timeout: "15s"

# API Server
api:
  bind_address: "0.0.0.0:9090"
  auth_enabled: true
  username: "admin"
  password: "veloflux-admin-password"

# Backend Pools
pools:
  # Pool para o tenant1
  - name: "tenant1-pool"
    algorithm: "round_robin"
    sticky_sessions: true
    backends:
      - address: "backend-tenant1:80"
        weight: 100
        health_check:
          path: "/health"
          interval: "15s"
          timeout: "3s"
          expected_status: 200

  # Pool para o tenant2
  - name: "tenant2-pool"
    algorithm: "round_robin"
    sticky_sessions: true
    backends:
      - address: "backend-tenant2:80"
        weight: 100
        health_check:
          path: "/health"
          interval: "15s"
          timeout: "3s"
          expected_status: 200

  # Pool para APIs
  - name: "api-pool"
    algorithm: "least_conn"
    sticky_sessions: false
    backends:
      - address: "backend-tenant1:80"
        weight: 100
        health_check:
          path: "/api/health"
          interval: "15s"
          timeout: "3s"
          expected_status: 200
      - address: "backend-tenant2:80"
        weight: 100
        health_check:
          path: "/api/health"
          interval: "15s"
          timeout: "3s"
          expected_status: 200

  # Pool para área administrativa
  - name: "admin-pool"
    algorithm: "least_conn"
    sticky_sessions: true
    backends:
      - address: "backend-tenant1:80"
        weight: 100
        health_check:
          path: "/admin/health"
          interval: "15s"
          timeout: "3s"
          expected_status: 200

  # Pool para site público principal
  - name: "public-pool"
    algorithm: "round_robin"
    sticky_sessions: true
    backends:
      - address: "backend-tenant1:80"
        weight: 100
        health_check:
          path: "/public/health"
          interval: "15s"
          timeout: "3s"
          expected_status: 200

# Routing Rules
routes:
  # Rotas de domínios públicos
  - host: "public.dev.veloflux.io"
    pool: "public-pool"
    path_prefix: "/public"
    
  - host: "tenant1.public.dev.veloflux.io"
    pool: "tenant1-pool"
    path_prefix: "/"

  - host: "tenant2.public.dev.veloflux.io"
    pool: "tenant2-pool"
    path_prefix: "/"

  - host: "api.public.dev.veloflux.io"
    pool: "api-pool"
    path_prefix: "/api"

  - host: "admin.public.dev.veloflux.io"
    pool: "admin-pool"
    path_prefix: "/admin"

  # Suporte a wildcard para subdomínios
  - host: "*.public.dev.veloflux.io"
    pool: "public-pool"
    path_prefix: "/public"
