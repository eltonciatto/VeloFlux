# VeloFlux LB Configuration Example
global:
  bind_address: "0.0.0.0:80"
  tls_bind_address: "0.0.0.0:443"
  metrics_address: "0.0.0.0:8080"
  
  # TLS Configuration
  tls:
    auto_cert: true
    acme_email: "admin@example.com"
    cert_dir: "/etc/ssl/certs/veloflux"

  # Health Check Defaults
  health_check:
    interval: "30s"
    timeout: "5s"
    retries: 3

  # Rate Limiting
  rate_limit:
    requests_per_second: 100
    burst_size: 200
    cleanup_interval: "5m"

  # Web Application Firewall
  waf:
    enabled: true
    ruleset_path: "/etc/veloflux/waf/crs-rules.conf"
    level: "standard"
    log_violations: true

  # GeoIP Configuration
  geoip:
    enabled: true
    database_path: "/etc/geoip/GeoLite2-City.mmdb"

# Authentication Configuration
auth:
  enabled: true
  jwt_secret: "your-super-secret-key-change-in-production"
  jwt_issuer: "veloflux-lb"
  jwt_audience: "veloflux-admin"
  token_validity: "24h"
  # OIDC Configuration (Keycloak / Auth0)
  oidc_enabled: false
  oidc_issuer_url: "https://auth.example.com/realms/veloflux"
  oidc_client_id: "veloflux-admin"
  oidc_redirect_uri: "https://admin.veloflux.example.com/auth/callback"

# Clustering Configuration
cluster:
  enabled: true
  redis_address: "redis:6379"
  redis_password: ""
  redis_db: 0
  node_id: ""  # Auto-generated if empty
  heartbeat_interval: "5s"
  leader_timeout: "15s"

# API Server Configuration
api:
  bind_address: "0.0.0.0:9090"
  auth_enabled: true
  username: "admin"
  password: "veloflux-admin-password"

# Tenant-specific configurations
tenants:
  - id: "tenant1"
    name: "Demo Company A"
    enabled: true
    routes:
      - host: "company-a.example.com"
        pool: "tenant1-pool"
        path_prefix: "/"
    rate_limit:
      requests_per_second: 50
      burst_size: 100
      cleanup_interval: "5m"
    waf:
      enabled: true
      level: "standard"

  - id: "tenant2"
    name: "Demo Company B"
    enabled: true
    routes:
      - host: "company-b.example.com"
        pool: "tenant2-pool"
        path_prefix: "/"
    rate_limit:
      requests_per_second: 200
      burst_size: 400
      cleanup_interval: "5m"
    waf:
      enabled: true
      level: "strict"

# Backend Pools
pools:
  - name: "web-servers"
    algorithm: "round_robin"
    sticky_sessions: true
    
    backends:
      - address: "backend-1:80"
        weight: 100
        health_check:
          path: "/health"
          interval: "15s"
          timeout: "3s"
          expected_status: 200
          
      - address: "backend-2:80"
        weight: 100
        health_check:
          path: "/health"
          interval: "15s"
          timeout: "3s"
          expected_status: 200

  - name: "api-servers"
    algorithm: "least_conn"
    sticky_sessions: false
    
    backends:
      - address: "api-1:8080"
        weight: 150
        health_check:
          path: "/api/health"
          
      - address: "api-2:8080"
        weight: 100
        health_check:
          path: "/api/health"

# Routing Rules
routes:
  - host: "example.com"
    pool: "web-servers"
    
  - host: "www.example.com"
    pool: "web-servers"
    
  - host: "api.example.com"
    pool: "api-servers"
    path_prefix: "/api"
